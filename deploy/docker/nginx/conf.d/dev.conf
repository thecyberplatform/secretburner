upstream ui {
  server secretburner-ui:9000;
}

upstream hmr {
  server secretburner-ui:9001;
}

upstream api {
  server secretburner-api:8000;
}

server {
  listen 9001;
  location / {
      proxy_pass http://hmr;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
  }
}

server {

    listen 80;

    gzip on;
    gzip_types text/css application/javascript application/json;
    gzip_min_length 1400;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_proxied no-cache no-store private expired;
    client_max_body_size 4G;

    # X-Content-Type-Options
    # This header prevents the browser from interpreting files as a different MIME type than what is specified by the content type in the HTTP headers.
    add_header X-Content-Type-Options "nosniff";

    # X-Frame-Options
    # This header tells the browser whether the content can be displayed within frames. This can prevent clickjacking attacks.
    add_header X-Frame-Options "SAMEORIGIN";

    # Strict-Transport-Security
    # This header forces the browser to use HTTPS for a given period of time. Only use this header if you are sure your site will be accessible over HTTPS for the duration specified.
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # X-XSS-Protection
    # This header is a basic protection against cross-site scripting (XSS) attacks.
    add_header X-XSS-Protection "1; mode=block";

    # Referrer-Policy
    # This header controls how much information the browser includes with navigations away from your site.
    add_header Referrer-Policy "no-referrer-when-downgrade";

    # Feature-Policy
    # This header allows you to control which features and APIs can be used in the browser.
    add_header Feature-Policy "camera 'none'; microphone 'none'; geolocation 'none';";


    location / {
        proxy_pass        http://ui;
        proxy_redirect    default;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

    location /api {
        proxy_pass        http://api;
        proxy_redirect    default;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

    location /auth/login {
        proxy_pass        http://api;
        proxy_redirect    default;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

    location /auth/logout {
        proxy_pass        http://api;
        proxy_redirect    default;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

    location /static {
        proxy_pass        http://api;
        proxy_redirect    default;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

    location /media {
        proxy_pass        http://api;
        proxy_redirect    default;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
    }

}
